digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	"(below main)" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="libc-2.31.so\n(below main)\n100.00%\n(0.00%)\n1×"];
	"(below main)" -> main [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x0000000000001100" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ld-2.31.so\n0x0000000000001100\n100.00%\n(0.00%)\n0×"];
	"0x0000000000001100" -> "_start" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"0x000000000010f068" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="???\n0x000000000010f068\n1.58%\n(0.11%)\n11419447×"];
	"0x000000000010f068" -> "__memcpy_avx_unaligned_erms" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.46%\n11419447×", labeldistance="0.50", penwidth="0.50"];
	"<alloc::alloc::Global as core::alloc::AllocRef>::grow" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<alloc::alloc::Global as core::alloc::AllocRef>::grow\n0.58%\n(0.02%)\n91324×"];
	"<alloc::alloc::Global as core::alloc::AllocRef>::grow" -> "alloc::alloc::Global::grow_impl" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.56%\n91324×", labeldistance="0.50", penwidth="0.50"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend" [color="#77ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend\n64.33%\n(0.01%)\n7504×"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend" -> "alloc::vec::Vec<T>::reserve" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.12%\n7504×", labeldistance="0.50", penwidth="0.50"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend" -> "core::iter::traits::iterator::Iterator::for_each" [arrowsize="0.80", color="#76ca07", fontcolor="#76ca07", fontsize="10.00", label="64.19%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter" [color="#77ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter\n64.33%\n(0.00%)\n7504×"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter" -> "<alloc::vec::Vec<T> as alloc::vec::SpecFromIterNested<T,I>>::from_iter" [arrowsize="0.80", color="#77ca07", fontcolor="#77ca07", fontsize="10.00", label="64.33%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecFromIterNested<T,I>>::from_iter" [color="#77ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<alloc::vec::Vec<T> as alloc::vec::SpecFromIterNested<T,I>>::from_iter\n64.33%\n(0.00%)\n7504×"];
	"<alloc::vec::Vec<T> as alloc::vec::SpecFromIterNested<T,I>>::from_iter" -> "<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::spec_extend" [arrowsize="0.80", color="#77ca07", fontcolor="#77ca07", fontsize="10.00", label="64.33%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"<alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter" [color="#77ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter\n64.34%\n(0.00%)\n7504×"];
	"<alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter" -> "<alloc::vec::Vec<T> as alloc::vec::SpecFromIter<T,I>>::from_iter" [arrowsize="0.80", color="#77ca07", fontcolor="#77ca07", fontsize="10.00", label="64.33%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish\n0.90%\n(0.04%)\n111514×"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish" -> "<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.22%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish" -> "<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.64%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::write" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::Hasher<S> as core::hash::Hasher>::write\n1.68%\n(0.41%)\n446056×"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::write" -> "<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.87%\n446056×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::Hasher<S> as core::hash::Hasher>::write" -> "core::intrinsics::copy_nonoverlapping" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.11%\n446056×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds\n1.09%\n(0.48%)\n557570×"];
	"<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds" -> "core::num::<impl u64>::rotate_left" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.39%\n3345420×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds" [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds\n0.64%\n(0.27%)\n111514×"];
	"<core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds" -> "core::num::<impl u64>::rotate_left" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.24%\n2007252×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::SipHasher13 as core::hash::Hasher>::finish" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::SipHasher13 as core::hash::Hasher>::finish\n0.91%\n(0.01%)\n111514×"];
	"<core::hash::sip::SipHasher13 as core::hash::Hasher>::finish" -> "<core::hash::sip::Hasher<S> as core::hash::Hasher>::finish" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.90%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"<core::hash::sip::SipHasher13 as core::hash::Hasher>::write" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::hash::sip::SipHasher13 as core::hash::Hasher>::write\n1.71%\n(0.03%)\n446056×"];
	"<core::hash::sip::SipHasher13 as core::hash::Hasher>::write" -> "<core::hash::sip::Hasher<S> as core::hash::Hasher>::write" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.68%\n446056×", labeldistance="0.50", penwidth="0.50"];
	"<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold" [color="#76ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold\n64.19%\n(0.00%)\n7504×"];
	"<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold" -> "core::iter::traits::iterator::Iterator::fold" [arrowsize="0.80", color="#76ca07", fontcolor="#76ca07", fontsize="10.00", label="64.19%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"<core::option::Option<T> as core::cmp::PartialEq>::ne" [color="#0d1876", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::option::Option<T> as core::cmp::PartialEq>::ne\n2.64%\n(2.64%)\n5085260×"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" [color="#0c8891", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next\n23.33%\n(9.12%)\n16298795×"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" -> "core::ptr::const_ptr::<impl *const T>::is_null" [arrowsize="0.35", color="#0d1f78", fontcolor="#0d1f78", fontsize="10.00", label="4.30%\n16298795×", labeldistance="0.50", penwidth="0.50"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" -> "core::ptr::mut_ptr::<impl *mut T>::is_null" [arrowsize="0.35", color="#0d1f78", fontcolor="#0d1f78", fontsize="10.00", label="4.30%\n16298795×", labeldistance="0.50", penwidth="0.50"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" -> "core::ptr::mut_ptr::<impl *mut T>::offset" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.64%\n15203152×", labeldistance="0.50", penwidth="0.50"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" -> "core::ptr::non_null::NonNull<T>::as_ptr" [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.08%\n63003894×", labeldistance="0.50", penwidth="0.50"];
	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" -> "core::ptr::non_null::NonNull<T>::new_unchecked" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.89%\n15203152×", labeldistance="0.50", penwidth="0.50"];
	"<games::agents::alphabeta_agent::AlphabetaAgent<Action,AgentId,T> as games::abstractions::agent::Agent<Action,AgentId,T>>::action" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::agents::alphabeta_agent::AlphabetaAgent<Action,AgentId,T> as games::abstractions::agent::Agent<Action,AgentId,T>>::action\n99.93%\n(0.00%)\n22×"];
	"<games::agents::alphabeta_agent::AlphabetaAgent<Action,AgentId,T> as games::abstractions::agent::Agent<Action,AgentId,T>>::action" -> "games::tree_search::alphabeta::alphabeta" [arrowsize="1.00", color="#ff0100", fontcolor="#ff0100", fontsize="10.00", label="99.93%\n22×", labeldistance="4.00", penwidth="4.00"];
	"<games::othello::environment::AgentId as core::cmp::PartialEq>::eq" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::AgentId as core::cmp::PartialEq>::eq\n2.07%\n(2.07%)\n6032983×"];
	"<games::othello::environment::Board as core::hash::Hash>::hash" [color="#0d1575", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as core::hash::Hash>::hash\n1.93%\n(0.03%)\n111514×"];
	"<games::othello::environment::Board as core::hash::Hash>::hash" -> "core::hash::impls::<impl core::hash::Hash for u64>::hash" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.40%\n334542×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_terminal" [color="#0c8090", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_terminal\n22.10%\n(0.01%)\n19646×"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_terminal" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" [arrowsize="0.47", color="#0c7f8f", fontcolor="#0c7f8f", fontsize="10.00", label="21.95%\n19681×", labeldistance="0.88", penwidth="0.88"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" [color="#dad605", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid\n75.53%\n(2.16%)\n5085260×"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" -> "<core::option::Option<T> as core::cmp::PartialEq>::ne" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.64%\n5085260×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" -> "games::othello::environment::Board::check_surrounding" [arrowsize="0.81", color="#82cc07", fontcolor="#82cc07", fontsize="10.00", label="65.55%\n3521676×", labeldistance="2.62", penwidth="2.62"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" -> "games::othello::environment::Board::get_tile_at_coords" [arrowsize="0.35", color="#0d2078", fontcolor="#0d2078", fontsize="10.00", label="4.43%\n5085260×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" -> "games::othello::environment::tile_to_x_y" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.75%\n5085260×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update" [color="#74ca08", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update\n64.01%\n(0.04%)\n51469×"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.54%\n51468×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" [arrowsize="0.76", color="#47c208", fontcolor="#47c208", fontsize="10.00", label="58.45%\n51469×", labeldistance="2.34", penwidth="2.34"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update" -> "games::othello::environment::Board::flip_tiles" [arrowsize="0.35", color="#0d1d77", fontcolor="#0d1d77", fontsize="10.00", label="3.70%\n51468×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" [color="#ee6b03", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions\n88.93%\n(1.58%)\n78654×"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_valid" [arrowsize="0.86", color="#d0d806", fontcolor="#d0d806", fontsize="10.00", label="73.98%\n5033792×", labeldistance="2.96", penwidth="2.96"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" -> "alloc::vec::Vec<T>::push" [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="3.98%\n569534×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" -> "core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next" [arrowsize="0.35", color="#0d377f", fontcolor="#0d377f", fontsize="10.00", label="9.38%\n5112446×", labeldistance="0.50", penwidth="0.50"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::what_if" [color="#74ca08", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::what_if\n63.99%\n(0.01%)\n51448×"];
	"<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::what_if" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::update" [arrowsize="0.80", color="#74ca08", fontcolor="#74ca08", fontsize="10.00", label="63.98%\n51448×", labeldistance="2.56", penwidth="2.56"];
	"<hashbrown::raw::RawIterHash<T> as core::iter::traits::iterator::Iterator>::next" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<hashbrown::raw::RawIterHash<T> as core::iter::traits::iterator::Iterator>::next\n0.53%\n(0.04%)\n116043×"];
	"<i64 as core::ops::arith::Add<&i64>>::add" [color="#0d337e", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<i64 as core::ops::arith::Add<&i64>>::add\n8.58%\n(3.86%)\n43871676×"];
	"<i64 as core::ops::arith::Add<&i64>>::add" -> "<i64 as core::ops::arith::Add>::add" [arrowsize="0.35", color="#0d2179", fontcolor="#0d2179", fontsize="10.00", label="4.72%\n43871676×", labeldistance="0.50", penwidth="0.50"];
	"<i64 as core::ops::arith::Add>::add" [color="#0d2179", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<i64 as core::ops::arith::Add>::add\n4.72%\n(4.72%)\n43871676×"];
	"<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish\n0.91%\n(0.01%)\n111514×"];
	"<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish" -> "<core::hash::sip::SipHasher13 as core::hash::Hasher>::finish" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.91%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write\n1.74%\n(0.03%)\n446056×"];
	"<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write" -> "<core::hash::sip::SipHasher13 as core::hash::Hasher>::write" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.71%\n446056×", labeldistance="0.50", penwidth="0.50"];
	"<u64 as core::iter::range::Step>::forward_unchecked" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n<u64 as core::iter::range::Step>::forward_unchecked\n0.89%\n(0.40%)\n5053404×"];
	"__memcpy_avx_unaligned_erms" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="libc-2.31.so\n__memcpy_avx_unaligned_erms\n1.48%\n(1.48%)\n11510832×"];
	"_start" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\n_start\n100.00%\n(0.00%)\n1×"];
	"_start" -> "(below main)" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"alloc::alloc::Global::grow_impl" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::alloc::Global::grow_impl\n0.56%\n(0.08%)\n91324×"];
	"alloc::raw_vec::RawVec<T,A>::grow_amortized" [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::raw_vec::RawVec<T,A>::grow_amortized\n3.21%\n(0.18%)\n177433×"];
	"alloc::raw_vec::RawVec<T,A>::grow_amortized" -> "alloc::raw_vec::finish_grow" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.13%\n177433×", labeldistance="0.50", penwidth="0.50"];
	"alloc::raw_vec::RawVec<T,A>::grow_amortized" -> "core::alloc::layout::Layout::array" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.12%\n177433×", labeldistance="0.50", penwidth="0.50"];
	"alloc::raw_vec::RawVec<T,A>::reserve" [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::raw_vec::RawVec<T,A>::reserve\n3.37%\n(0.03%)\n177440×"];
	"alloc::raw_vec::RawVec<T,A>::reserve" -> "alloc::raw_vec::RawVec<T,A>::try_reserve" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.32%\n177440×", labeldistance="0.50", penwidth="0.50"];
	"alloc::raw_vec::RawVec<T,A>::try_reserve" [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::raw_vec::RawVec<T,A>::try_reserve\n3.32%\n(0.05%)\n177440×"];
	"alloc::raw_vec::RawVec<T,A>::try_reserve" -> "alloc::raw_vec::RawVec<T,A>::grow_amortized" [arrowsize="0.35", color="#0d1a77", fontcolor="#0d1a77", fontsize="10.00", label="3.21%\n177433×", labeldistance="0.50", penwidth="0.50"];
	"alloc::raw_vec::finish_grow" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::raw_vec::finish_grow\n1.13%\n(0.12%)\n177433×"];
	"alloc::raw_vec::finish_grow" -> "<alloc::alloc::Global as core::alloc::AllocRef>::grow" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.58%\n91324×", labeldistance="0.50", penwidth="0.50"];
	"alloc::slice::<impl [T]>::sort_by" [color="#0d1d78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::slice::<impl [T]>::sort_by\n3.79%\n(0.00%)\n7503×"];
	"alloc::slice::<impl [T]>::sort_by" -> "alloc::slice::merge_sort" [arrowsize="0.35", color="#0d1d78", fontcolor="#0d1d78", fontsize="10.00", label="3.79%\n7503×", labeldistance="0.50", penwidth="0.50"];
	"alloc::slice::<impl [T]>::sort_by::{{closure}}" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::slice::<impl [T]>::sort_by::{{closure}}\n3.64%\n(0.01%)\n44450×"];
	"alloc::slice::<impl [T]>::sort_by::{{closure}}" -> "games::tree_search::alphabeta::alphabeta::{{closure}}" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.62%\n44450×", labeldistance="0.50", penwidth="0.50"];
	"alloc::slice::insert_head" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::slice::insert_head\n3.67%\n(0.02%)\n43946×"];
	"alloc::slice::insert_head" -> "alloc::slice::<impl [T]>::sort_by::{{closure}}" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.64%\n44450×", labeldistance="0.50", penwidth="0.50"];
	"alloc::slice::merge_sort" [color="#0d1d78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::slice::merge_sort\n3.79%\n(0.02%)\n7503×"];
	"alloc::slice::merge_sort" -> "alloc::slice::insert_head" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.67%\n43946×", labeldistance="0.50", penwidth="0.50"];
	"alloc::vec::Vec<T>::push" [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::vec::Vec<T>::push\n3.98%\n(0.30%)\n569555×"];
	"alloc::vec::Vec<T>::push" -> "alloc::vec::Vec<T>::reserve" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.27%\n169936×", labeldistance="0.50", penwidth="0.50"];
	"alloc::vec::Vec<T>::reserve" [color="#0d1b77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nalloc::vec::Vec<T>::reserve\n3.39%\n(0.02%)\n177440×"];
	"alloc::vec::Vec<T>::reserve" -> "alloc::raw_vec::RawVec<T,A>::reserve" [arrowsize="0.35", color="#0d1b77", fontcolor="#0d1b77", fontsize="10.00", label="3.37%\n177440×", labeldistance="0.50", penwidth="0.50"];
	"core::alloc::layout::Layout::array" [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::alloc::layout::Layout::array\n1.12%\n(0.09%)\n177463×"];
	"core::array::<impl core::iter::traits::collect::IntoIterator for &[T; N]>::into_iter" [color="#0d1f78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::array::<impl core::iter::traits::collect::IntoIterator for &[T; N]>::into_iter\n4.30%\n(0.35%)\n3573144×"];
	"core::array::<impl core::iter::traits::collect::IntoIterator for &[T; N]>::into_iter" -> "core::slice::<impl [T]>::iter" [arrowsize="0.35", color="#0d1e78", fontcolor="#0d1e78", fontsize="10.00", label="3.95%\n3573144×", labeldistance="0.50", penwidth="0.50"];
	"core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt\n0.50%\n(0.50%)\n5132057×"];
	"core::hash::Hasher::write_u64" [color="#0d1275", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::hash::Hasher::write_u64\n1.37%\n(0.05%)\n334542×"];
	"core::hash::Hasher::write_u64" -> "<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::write" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.30%\n334542×", labeldistance="0.50", penwidth="0.50"];
	"core::hash::impls::<impl core::hash::Hash for u64>::hash" [color="#0d1375", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::hash::impls::<impl core::hash::Hash for u64>::hash\n1.40%\n(0.03%)\n334542×"];
	"core::hash::impls::<impl core::hash::Hash for u64>::hash" -> "core::hash::Hasher::write_u64" [arrowsize="0.35", color="#0d1275", fontcolor="#0d1275", fontsize="10.00", label="1.37%\n334542×", labeldistance="0.50", penwidth="0.50"];
	"core::intrinsics::copy_nonoverlapping" [color="#0d1876", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::intrinsics::copy_nonoverlapping\n2.61%\n(1.15%)\n10692560×"];
	"core::intrinsics::copy_nonoverlapping" -> "0x000000000010f068" [arrowsize="0.35", color="#0d1375", fontcolor="#0d1375", fontsize="10.00", label="1.46%\n10692560×", labeldistance="0.50", penwidth="0.50"];
	"core::iter::adapters::map_fold::{{closure}}" [color="#75ca08", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::iter::adapters::map_fold::{{closure}}\n64.09%\n(0.02%)\n51448×"];
	"core::iter::adapters::map_fold::{{closure}}" -> "games::tree_search::alphabeta::alphabeta::{{closure}}" [arrowsize="0.80", color="#74ca08", fontcolor="#74ca08", fontsize="10.00", label="64.01%\n51448×", labeldistance="2.56", penwidth="2.56"];
	"core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next" [color="#0d387f", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next\n9.41%\n(1.70%)\n5132615×"];
	"core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next" -> "<u64 as core::iter::range::Step>::forward_unchecked" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.89%\n5053404×", labeldistance="0.50", penwidth="0.50"];
	"core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next" -> "core::cmp::impls::<impl core::cmp::PartialOrd for u64>::lt" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.50%\n5132057×", labeldistance="0.50", penwidth="0.50"];
	"core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next" -> "core::mem::replace" [arrowsize="0.35", color="#0d277b", fontcolor="#0d277b", fontsize="10.00", label="6.08%\n5053908×", labeldistance="0.50", penwidth="0.50"];
	"core::iter::traits::iterator::Iterator::collect" [color="#77ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::iter::traits::iterator::Iterator::collect\n64.34%\n(0.00%)\n7504×"];
	"core::iter::traits::iterator::Iterator::collect" -> "<alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter" [arrowsize="0.80", color="#77ca07", fontcolor="#77ca07", fontsize="10.00", label="64.34%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"core::iter::traits::iterator::Iterator::fold" [color="#76ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::iter::traits::iterator::Iterator::fold\n64.19%\n(0.01%)\n7504×"];
	"core::iter::traits::iterator::Iterator::fold" -> "core::iter::adapters::map_fold::{{closure}}" [arrowsize="0.80", color="#75ca08", fontcolor="#75ca08", fontsize="10.00", label="64.09%\n51448×", labeldistance="2.56", penwidth="2.56"];
	"core::iter::traits::iterator::Iterator::for_each" [color="#76ca07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::iter::traits::iterator::Iterator::for_each\n64.19%\n(0.00%)\n7504×"];
	"core::iter::traits::iterator::Iterator::for_each" -> "<core::iter::adapters::Map<I,F> as core::iter::traits::iterator::Iterator>::fold" [arrowsize="0.80", color="#76ca07", fontcolor="#76ca07", fontsize="10.00", label="64.19%\n7504×", labeldistance="2.57", penwidth="2.57"];
	"core::mem::replace" [color="#0d277b", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::mem::replace\n6.08%\n(0.49%)\n5053910×"];
	"core::mem::replace" -> "core::mem::swap" [arrowsize="0.35", color="#0d257a", fontcolor="#0d257a", fontsize="10.00", label="5.59%\n5053910×", labeldistance="0.50", penwidth="0.50"];
	"core::mem::swap" [color="#0d257a", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::mem::swap\n5.59%\n(0.30%)\n5053926×"];
	"core::mem::swap" -> "core::ptr::swap_nonoverlapping_one" [arrowsize="0.35", color="#0d247a", fontcolor="#0d247a", fontsize="10.00", label="5.29%\n5053926×", labeldistance="0.50", penwidth="0.50"];
	"core::num::<impl u64>::rotate_left" [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::num::<impl u64>::rotate_left\n0.63%\n(0.63%)\n5352672×"];
	"core::ops::function::Fn::call" [color="#0d2b7b", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ops::function::Fn::call\n6.80%\n(0.00%)\n6055×"];
	"core::ops::function::Fn::call" -> "games::tree_search::greedy_reward::greedy_reward" [arrowsize="0.35", color="#0d2b7b", fontcolor="#0d2b7b", fontsize="10.00", label="6.80%\n6055×", labeldistance="0.50", penwidth="0.50"];
	"core::ops::function::FnOnce::call_once" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ops::function::FnOnce::call_once\n100.00%\n(0.00%)\n1×"];
	"core::ops::function::FnOnce::call_once" -> "ttt_ab_vs_uct::main" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"core::ptr::const_ptr::<impl *const T>::add" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::const_ptr::<impl *const T>::add\n0.74%\n(0.32%)\n4026788×"];
	"core::ptr::const_ptr::<impl *const T>::guaranteed_eq" [color="#0d1876", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::const_ptr::<impl *const T>::guaranteed_eq\n2.72%\n(2.72%)\n19879443×"];
	"core::ptr::const_ptr::<impl *const T>::is_null" [color="#0d2479", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::const_ptr::<impl *const T>::is_null\n5.25%\n(2.53%)\n19879443×"];
	"core::ptr::const_ptr::<impl *const T>::is_null" -> "core::ptr::const_ptr::<impl *const T>::guaranteed_eq" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.72%\n19879443×", labeldistance="0.50", penwidth="0.50"];
	"core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq" [color="#0d1776", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::mut_ptr::<impl *mut T>::guaranteed_eq\n2.35%\n(2.35%)\n17154465×"];
	"core::ptr::mut_ptr::<impl *mut T>::is_null" [color="#0d2079", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::mut_ptr::<impl *mut T>::is_null\n4.53%\n(2.18%)\n17154465×"];
	"core::ptr::mut_ptr::<impl *mut T>::is_null" -> "core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq" [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.35%\n17154465×", labeldistance="0.50", penwidth="0.50"];
	"core::ptr::mut_ptr::<impl *mut T>::offset" [color="#0d1475", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::mut_ptr::<impl *mut T>::offset\n1.73%\n(1.73%)\n16074193×"];
	"core::ptr::non_null::NonNull<T>::as_ptr" [color="#0d1a77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::non_null::NonNull<T>::as_ptr\n3.14%\n(3.14%)\n64122307×"];
	"core::ptr::non_null::NonNull<T>::new_unchecked" [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::non_null::NonNull<T>::new_unchecked\n1.15%\n(1.15%)\n19537361×"];
	"core::ptr::read" [color="#0d1675", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::read\n2.14%\n(0.90%)\n5069968×"];
	"core::ptr::read" -> "core::intrinsics::copy_nonoverlapping" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.24%\n5069968×", labeldistance="0.50", penwidth="0.50"];
	"core::ptr::swap_nonoverlapping_one" [color="#0d247a", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::ptr::swap_nonoverlapping_one\n5.29%\n(1.63%)\n5053926×"];
	"core::ptr::swap_nonoverlapping_one" -> "core::intrinsics::copy_nonoverlapping" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.24%\n5053910×", labeldistance="0.50", penwidth="0.50"];
	"core::ptr::swap_nonoverlapping_one" -> "core::ptr::read" [arrowsize="0.35", color="#0d1675", fontcolor="#0d1675", fontsize="10.00", label="2.13%\n5053910×", labeldistance="0.50", penwidth="0.50"];
	"core::slice::<impl [T]>::iter" [color="#0d1e78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::slice::<impl [T]>::iter\n3.96%\n(0.35%)\n3580648×"];
	"core::slice::<impl [T]>::iter" -> "core::slice::iter::Iter<T>::new" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.61%\n3580648×", labeldistance="0.50", penwidth="0.50"];
	"core::slice::iter::Iter<T>::new" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ncore::slice::iter::Iter<T>::new\n3.61%\n(1.30%)\n3580648×"];
	"core::slice::iter::Iter<T>::new" -> "core::ptr::const_ptr::<impl *const T>::add" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.67%\n3580648×", labeldistance="0.50", penwidth="0.50"];
	"core::slice::iter::Iter<T>::new" -> "core::ptr::const_ptr::<impl *const T>::is_null" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.95%\n3580648×", labeldistance="0.50", penwidth="0.50"];
	"core::slice::iter::Iter<T>::new" -> "core::ptr::non_null::NonNull<T>::new_unchecked" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.21%\n3580648×", labeldistance="0.50", penwidth="0.50"];
	"games::abstractions::play::play" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::abstractions::play::play\n100.00%\n(0.00%)\n1×"];
	"games::abstractions::play::play" -> "<games::agents::alphabeta_agent::AlphabetaAgent<Action,AgentId,T> as games::abstractions::agent::Agent<Action,AgentId,T>>::action" [arrowsize="1.00", color="#ff0100", fontcolor="#ff0100", fontsize="10.00", label="99.93%\n22×", labeldistance="4.00", penwidth="4.00"];
	"games::othello::environment::Board::check_direction" [color="#0d4d84", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::check_direction\n13.54%\n(1.38%)\n1922961×"];
	"games::othello::environment::Board::check_direction" -> "<games::othello::environment::AgentId as core::cmp::PartialEq>::eq" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.56%\n1634858×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction" -> "<i64 as core::ops::arith::Add<&i64>>::add" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.75%\n3845922×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction" -> "games::othello::environment::Board::check_direction'2" [arrowsize="0.35", color="#0d377f", fontcolor="#0d377f", fontsize="10.00", label="9.19%\n1845846×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction" -> "games::othello::environment::Board::get_tile_at_coords" [arrowsize="0.35", color="#0d1475", fontcolor="#0d1475", fontsize="10.00", label="1.66%\n1907955×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction'2" [color="#0d377f", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::check_direction'2\n9.19%\n(3.01%)\n5159187×"];
	"games::othello::environment::Board::check_direction'2" -> "<games::othello::environment::AgentId as core::cmp::PartialEq>::eq" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.64%\n1860628×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction'2" -> "<i64 as core::ops::arith::Add<&i64>>::add" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="2.02%\n10318374×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction'2" -> "games::othello::environment::Board::check_direction'2" [arrowsize="0.35", color="#0d377f", fontcolor="#0d377f", fontsize="10.00", label="3313341×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_direction'2" -> "games::othello::environment::Board::get_tile_at_coords" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.53%\n4050751×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" [color="#82cc07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::check_surrounding\n65.55%\n(10.98%)\n3521676×"];
	"games::othello::environment::Board::check_surrounding" -> "<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" [arrowsize="0.48", color="#0c8490", fontcolor="#0c8490", fontsize="10.00", label="22.60%\n15776632×", labeldistance="0.90", penwidth="0.90"];
	"games::othello::environment::Board::check_surrounding" -> "<games::othello::environment::AgentId as core::cmp::PartialEq>::eq" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.82%\n2381974×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" -> "<i64 as core::ops::arith::Add<&i64>>::add" [arrowsize="0.35", color="#0d267a", fontcolor="#0d267a", fontsize="10.00", label="5.77%\n29479920×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" -> "core::array::<impl core::iter::traits::collect::IntoIterator for &[T; N]>::into_iter" [arrowsize="0.35", color="#0d1f78", fontcolor="#0d1f78", fontsize="10.00", label="4.24%\n3521676×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" -> "games::othello::environment::Board::check_direction" [arrowsize="0.35", color="#0d4081", fontcolor="#0d4081", fontsize="10.00", label="11.08%\n1446430×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" -> "games::othello::environment::Board::get_tile_at_square" [arrowsize="0.35", color="#0d2d7c", fontcolor="#0d2d7c", fontsize="10.00", label="7.30%\n12875958×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::check_surrounding" -> "games::othello::environment::x_y_to_tile" [arrowsize="0.35", color="#0d1876", fontcolor="#0d1876", fontsize="10.00", label="2.77%\n12875958×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::flip_in_dir" [color="#0d0f73", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::flip_in_dir\n0.56%\n(0.11%)\n113730×"];
	"games::othello::environment::Board::flip_in_dir" -> "games::othello::environment::Board::check_direction" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.24%\n64787×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::flip_tiles" [color="#0d1d77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::flip_tiles\n3.70%\n(0.21%)\n51468×"];
	"games::othello::environment::Board::flip_tiles" -> "<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.65%\n463212×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::flip_tiles" -> "games::othello::environment::Board::check_direction" [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.22%\n411744×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::flip_tiles" -> "games::othello::environment::Board::flip_in_dir" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.56%\n113730×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::get_tile_at_coords" [color="#0d397f", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::get_tile_at_coords\n9.71%\n(7.31%)\n11157696×"];
	"games::othello::environment::Board::get_tile_at_coords" -> "games::othello::environment::x_y_to_tile" [arrowsize="0.35", color="#0d1776", fontcolor="#0d1776", fontsize="10.00", label="2.40%\n11157696×", labeldistance="0.50", penwidth="0.50"];
	"games::othello::environment::Board::get_tile_at_square" [color="#0d2d7c", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::Board::get_tile_at_square\n7.31%\n(7.31%)\n12895569×"];
	"games::othello::environment::tile_to_x_y" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::tile_to_x_y\n0.75%\n(0.75%)\n5136728×"];
	"games::othello::environment::x_y_to_tile" [color="#0d2379", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::othello::environment::x_y_to_tile\n5.20%\n(5.20%)\n24147388×"];
	"games::tree_search::alphabeta::alphabeta" [color="#ff0100", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::tree_search::alphabeta::alphabeta\n99.93%\n(0.00%)\n22×"];
	"games::tree_search::alphabeta::alphabeta" -> "core::iter::traits::iterator::Iterator::collect" [arrowsize="0.35", color="#0d0d73", fontcolor="#0d0d73", fontsize="10.00", label="0.18%\n22×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::alphabeta" -> "games::tree_search::alphabeta::alphabeta'2" [arrowsize="1.00", color="#ff0300", fontcolor="#ff0300", fontsize="10.00", label="99.69%\n130×", labeldistance="3.99", penwidth="3.99"];
	"games::tree_search::alphabeta::alphabeta'2" [color="#ff0300", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::tree_search::alphabeta::alphabeta'2\n99.69%\n(0.03%)\n15649×"];
	"games::tree_search::alphabeta::alphabeta'2" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_terminal" [arrowsize="0.39", color="#0c5787", fontcolor="#0c5787", fontsize="10.00", label="15.30%\n13537×", labeldistance="0.61", penwidth="0.61"];
	"games::tree_search::alphabeta::alphabeta'2" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::valid_actions" [arrowsize="0.35", color="#0d337e", fontcolor="#0d337e", fontsize="10.00", label="8.50%\n7482×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::alphabeta'2" -> "alloc::slice::<impl [T]>::sort_by" [arrowsize="0.35", color="#0d1d78", fontcolor="#0d1d78", fontsize="10.00", label="3.78%\n7481×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::alphabeta'2" -> "core::iter::traits::iterator::Iterator::collect" [arrowsize="0.80", color="#76ca08", fontcolor="#76ca08", fontsize="10.00", label="64.16%\n7482×", labeldistance="2.57", penwidth="2.57"];
	"games::tree_search::alphabeta::alphabeta'2" -> "core::ops::function::Fn::call" [arrowsize="0.35", color="#0d2b7b", fontcolor="#0d2b7b", fontsize="10.00", label="6.80%\n6055×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::alphabeta'2" -> "games::tree_search::alphabeta::alphabeta'2" [arrowsize="1.00", color="#ff0300", fontcolor="#ff0300", fontsize="10.00", label="15519×", labeldistance="3.99", penwidth="3.99"];
	"games::tree_search::alphabeta::alphabeta'2" -> "std::collections::hash::map::HashMap<K,V,S>::get" [arrowsize="0.35", color="#0d0f74", fontcolor="#0d0f74", fontsize="10.00", label="0.63%\n15649×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::alphabeta::{{closure}}" [color="#94cf07", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::tree_search::alphabeta::alphabeta::{{closure}}\n67.62%\n(0.02%)\n95898×"];
	"games::tree_search::alphabeta::alphabeta::{{closure}}" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::what_if" [arrowsize="0.80", color="#74ca08", fontcolor="#74ca08", fontsize="10.00", label="63.99%\n51448×", labeldistance="2.56", penwidth="2.56"];
	"games::tree_search::alphabeta::alphabeta::{{closure}}" -> "games::tree_search::alphabeta::sort_by_score" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.61%\n44450×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::alphabeta::sort_by_score" [color="#0d1c77", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::tree_search::alphabeta::sort_by_score\n3.61%\n(0.02%)\n44450×"];
	"games::tree_search::alphabeta::sort_by_score" -> "std::collections::hash::map::HashMap<K,V,S>::get" [arrowsize="0.35", color="#0d1c77", fontcolor="#0d1c77", fontsize="10.00", label="3.55%\n88900×", labeldistance="0.50", penwidth="0.50"];
	"games::tree_search::greedy_reward::greedy_reward" [color="#0d2b7b", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\ngames::tree_search::greedy_reward::greedy_reward\n6.80%\n(0.00%)\n6055×"];
	"games::tree_search::greedy_reward::greedy_reward" -> "<games::othello::environment::Board as games::abstractions::environment::Environment<u64,games::othello::environment::AgentId>>::is_terminal" [arrowsize="0.35", color="#0d2b7b", fontcolor="#0d2b7b", fontsize="10.00", label="6.74%\n6055×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::map::HashMap<K,V,S>::get" [color="#0d1f78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::map::HashMap<K,V,S>::get\n4.17%\n(0.02%)\n104571×"];
	"hashbrown::map::HashMap<K,V,S>::get" -> "hashbrown::map::HashMap<K,V,S>::get_key_value" [arrowsize="0.35", color="#0d1f78", fontcolor="#0d1f78", fontsize="10.00", label="4.15%\n104571×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::map::HashMap<K,V,S>::get_key_value" [color="#0d1f78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::map::HashMap<K,V,S>::get_key_value\n4.15%\n(0.03%)\n104571×"];
	"hashbrown::map::HashMap<K,V,S>::get_key_value" -> "hashbrown::map::make_hash" [arrowsize="0.35", color="#0d1976", fontcolor="#0d1976", fontsize="10.00", label="2.82%\n104571×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::map::HashMap<K,V,S>::get_key_value" -> "hashbrown::raw::RawTable<T>::find" [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.30%\n104571×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::map::make_hash" [color="#0d1977", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::map::make_hash\n3.00%\n(0.02%)\n111514×"];
	"hashbrown::map::make_hash" -> "<games::othello::environment::Board as core::hash::Hash>::hash" [arrowsize="0.35", color="#0d1575", fontcolor="#0d1575", fontsize="10.00", label="1.93%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::map::make_hash" -> "<std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish" [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="0.91%\n111514×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::raw::RawIterHash<T>::new" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::raw::RawIterHash<T>::new\n0.73%\n(0.08%)\n110626×"];
	"hashbrown::raw::RawIterHash<T>::new" -> "hashbrown::raw::sse2::Group::match_byte" [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.35%\n110626×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::raw::RawTable<T>::find" [color="#0d1275", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::raw::RawTable<T>::find\n1.37%\n(0.05%)\n110626×"];
	"hashbrown::raw::RawTable<T>::find" -> "<hashbrown::raw::RawIterHash<T> as core::iter::traits::iterator::Iterator>::next" [arrowsize="0.35", color="#0d0f73", fontcolor="#0d0f73", fontsize="10.00", label="0.53%\n116043×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::raw::RawTable<T>::find" -> "hashbrown::raw::RawTable<T>::iter_hash" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.74%\n110626×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::raw::RawTable<T>::iter_hash" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::raw::RawTable<T>::iter_hash\n0.74%\n(0.01%)\n110626×"];
	"hashbrown::raw::RawTable<T>::iter_hash" -> "hashbrown::raw::RawIterHash<T>::new" [arrowsize="0.35", color="#0d1074", fontcolor="#0d1074", fontsize="10.00", label="0.73%\n110626×", labeldistance="0.50", penwidth="0.50"];
	"hashbrown::raw::sse2::Group::match_byte" [color="#0d1074", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nhashbrown::raw::sse2::Group::match_byte\n0.71%\n(0.07%)\n221982×"];
	main [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nmain\n100.00%\n(0.00%)\n1×"];
	main -> "std::rt::lang_start" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"std::collections::hash::map::HashMap<K,V,S>::get" [color="#0d1f78", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nstd::collections::hash::map::HashMap<K,V,S>::get\n4.18%\n(0.01%)\n104571×"];
	"std::collections::hash::map::HashMap<K,V,S>::get" -> "hashbrown::map::HashMap<K,V,S>::get" [arrowsize="0.35", color="#0d1f78", fontcolor="#0d1f78", fontsize="10.00", label="4.17%\n104571×", labeldistance="0.50", penwidth="0.50"];
	"std::rt::lang_start" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nstd::rt::lang_start\n100.00%\n(0.00%)\n1×"];
	"std::rt::lang_start" -> "std::rt::lang_start_internal" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"std::rt::lang_start::{{closure}}" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nstd::rt::lang_start::{{closure}}\n100.00%\n(0.00%)\n1×"];
	"std::rt::lang_start::{{closure}}" -> "std::sys_common::backtrace::__rust_begin_short_backtrace" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"std::rt::lang_start_internal" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nstd::rt::lang_start_internal\n100.00%\n(0.00%)\n1×"];
	"std::rt::lang_start_internal" -> "std::rt::lang_start::{{closure}}" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"std::sys_common::backtrace::__rust_begin_short_backtrace" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nstd::sys_common::backtrace::__rust_begin_short_backtrace\n100.00%\n(0.00%)\n1×"];
	"std::sys_common::backtrace::__rust_begin_short_backtrace" -> "core::ops::function::FnOnce::call_once" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
	"ttt_ab_vs_uct::main" [color="#ff0000", fontcolor="#ffffff", fontsize="10.00", label="ttt_ab_vs_uct\nttt_ab_vs_uct::main\n100.00%\n(0.00%)\n1×"];
	"ttt_ab_vs_uct::main" -> "games::abstractions::play::play" [arrowsize="1.00", color="#ff0000", fontcolor="#ff0000", fontsize="10.00", label="100.00%\n1×", labeldistance="4.00", penwidth="4.00"];
}
